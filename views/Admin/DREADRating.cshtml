@using Newtonsoft.Json;
@using myvdbsSQL;
@using MyVDBSDemo.Models;
@model IEnumerable<MyVDBSDemo.Models.tblREFDREADRisk>

@{
    ViewBag.Title = "DREAD Rating";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";

}

<div class="col-lg-12" style="margin-top:80px">
    <div class="panel panel-info">
        <div class="panel-body">
            <table class="table table-bordered table-striped display" id="pageList" align="center">
                <thead style="background-color:moccasin">
                    <tr>
                        <th class="text-center">No.</th>
                        <th class="col-sm-6 text-center">Severity Name</th>
                        <th class="col-sm-2 text-center">Minimum Risk</th>
                        <th class="col-sm-2 text-center">Maximum Risk</th>
                        <th class="col-sm-2 text-center"></th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        var count = 0;
                        foreach (var item in Model)

                        {
                            count = count + 1;
                            <tr>
                                <td style="text-align:center">@count</td>
                                <td>@Html.Raw(item.SeverityNm)</td>
                                <td>@item.RiskMin</td>
                                <td>@item.RiskMax</td>
                                <td style="text-align:center">
                                    <button type="button" id="edit" class="btn btn-success btn-xs edit" onclick="edit('@item.DREADRiskId')"><span class="glyphicon glyphicon-pencil"></span> Update</button>
                                    <button type="button" id="delete" class="btn btn-danger btn-xs delete" onclick="hapus('@item.DREADRiskId')"><span class="glyphicon glyphicon-trash"></span> Delete</button>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
            <div align="right">
                <div id="drawSearchPaginateDT"></div>
            </div>
            <div class="row">
                <div class="col-md-12" align="center">

                    <button data-bind="click : add, visible :true, enable: true" class="btn btn-primary btn-sm m-t-10">
                        <span class="glyphicon glyphicon-plus" aria-hidden="true"></span> Add
                    </button>

                    @*<button data-bind="click : cancel, visible :true, enable: true" class="btn btn-info btn-sm m-t-10">
                        <span class="glyphicon glyphicon-remove" aria-hidden="true"></span> Cancel
                    </button>*@

                </div>
            </div>
        </div>

    </div>
</div>
<div id="RatingAdd" class="modal" role="dialog" data-keyboard="false" tabindex="-1" data-backdrop="static">
    <div class="modal-dialog" style="width:500px">
        <div class="panel panel-info">
            <div class="panel-heading">
                <h3 class="panel-title">Add DREAD Rating</h3>
            </div>
            @*<div class="modal-content">
            <div class="modal-header">
                <h4 align="center">Add DREAD Rating</h4>
            </div>*@

            <div class="modal-body">
                <div class="form-group">
                    <form id="addForm">
                        <div class="form-group">
                            <label for="SeverityNm" class="col-form-label required">Rating Name:</label>
                            <input type="text" class="validate[required] form-control" data-bind="value:rating2.SeverityNm" id="SeverityNm" placeholder="e.g. High" maxlength="20">
                        </div>
                        <br />
                        <div class="form-group">
                            <label for="RiskMin" class="col-form-label required">Minimum Score:</label>
                            <input type="text" class="validate[required] form-control" data-bind="value:rating2.RiskMin" id="min" name="min" onkeypress="return isNumberKey(event)" placeholder="e.g. 0.00">
                        </div>
                        <br />
                        <div class="form-group">
                            <label for="RiskMax" class="col-form-label required">Maximum Score:</label>
                            <input type="text" class="validate[required] form-control" data-bind="value:rating2.RiskMax" id="max" name="max" onkeypress="return isNumberKey(event)" placeholder="e.g. 10.00">
                        </div>
                    </form>

                </div>
            </div>

            <div class="modal-footer">
                <div align="center">
                    <button id="saveDialog" class="btn btn-success btn-sm m-t-10" data-bind="click:saveDialog"><span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span> Save </button>
                    <button id="resetDialog" class="btn btn-warning btn-sm m-t-10" data-bind="click:resetDialog"><span class="glyphicon glyphicon-refresh" aria-hidden="true"></span> Reset </button>
                    <button id="cancelDialog" class="btn btn-info btn-sm m-t-10" data-bind="click:cancelDialog"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span> Cancel </button>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="RatingEdit" class="modal" role="dialog" data-keyboard="false" tabindex="-1" data-backdrop="static">
    <div class="modal-dialog" style="width:500px">
        <div class="panel panel-info">
            <div class="panel-heading">
                <h3 class="panel-title">Update DREAD Rating</h3>
            </div>

            <div class="modal-body">
                <div class="form-group">
                    <form id="editForm">
                        <div class="form-group">
                            <label for="SeverityNm" class="col-form-label required">Rating Name:</label>
                            @*<input type="text" class="validate[required] form-control" data-bind="value:rating3.SeverityNm" id="SeverityNm" placeholder="e.g. High">*@
                            <textarea id="SeverityNm1" type="text" class="form-control textarearesize" name="cve_id" maxlength="20" placeholder="e.g. High" autofocus rows="1" data-bind="html:rating3.SeverityNm, valueUpdate:'afterkeydown'" onkeypress="return runScript(event)" autocomplete="off"></textarea>
                            <input type="hidden" class="form-control" data-bind="value:rating3.DREADRiskId" id="DREADRiskId">
                        </div>
                        <br />
                        <div class="form-group">
                            <label for="RiskMin" class="col-form-label required">Minimum Score:</label>
                            <input type="text" class="validate[required] form-control" data-bind="value:rating3.RiskMin" name="RiskMin" id="RiskMin" onkeypress="return isNumberKey(event)" placeholder="e.g. 0.00">
                        </div>
                        <br />
                        <div class="form-group">
                            <label for="RiskMax" class="col-form-label required">Maximum Score:</label>
                            <input type="text" class="validate[required] form-control" data-bind="value:rating3.RiskMax" name="RiskMax" id="RiskMax" onkeypress="return isNumberKey(event)" placeholder="e.g. 10.00">
                        </div>
                    </form>

                </div>
            </div>

            <div class="modal-footer">
                <div align="center">
                    <button id="saveUpdate" class="btn btn-success btn-sm m-t-10" data-bind="click:saveUpdate"><span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span> Save </button>
                    <button id="resetUpdate" class="btn btn-warning btn-sm m-t-10" data-bind="click:resetUpdate"><span class="glyphicon glyphicon-refresh" aria-hidden="true"></span> Reset </button>
                    <button id="cancelUpdate" class="btn btn-info btn-sm m-t-10" data-bind="click:cancelUpdate"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span> Cancel </button>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="~/Scripts/Common/CookieHelper.js"></script>
<script>

    var Rating = @Html.Raw(JsonConvert.SerializeObject(@Model, Formatting.None,
                    new JsonSerializerSettings()
    {
                        ReferenceLoopHandling = ReferenceLoopHandling.Ignore
    }));

</script>

<script>
    var dtInstance = $("#pageList").DataTable({
        "scrollCollapse": false,
        "paging": true,
        "columnDefs": [{
            "searchable": false,
            "orderable": false,
            "targets": 0
        }],
        "order": [[1, 'asc']]
    });

    dtInstance.on('order.dt search.dt', function () {
        dtInstance.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
            cell.innerHTML = i + 1;
        });
    }).draw();

    dtInstance.on( 'draw', function () {
        $('#paginatesearch').val(dtInstance.page()+1);
        setCookie("listingpage4", dtInstance.page()+1, 1);
    } );

    var viewModel;
    var UserIdLogin = '@User.Identity.Name';

    var btnRefresh = function () {
        location.reload();
    }

    function cancel() {
        //ShowDecisionMessage("Are you Sure To Cancel ?", function () {

            location.href = "/Admin/Dashboard";
        //});
    }

    function edit(ratingId) {
        viewModel.update(ratingId);
    }

    function checkValue(val) {
        viewModel.validate(val.value);
    }

    $(function () {

        viewModel = {
            rating1: ko.mapping.fromJS(Rating),
            rating2 :
            {
                DREADRiskId: ko.observable(""),
                SeverityNm: ko.observable(""),
                RiskMin: ko.observable(""),
                RiskMax: ko.observable(""),
                UserIdLogin: UserIdLogin,
            },
            rating3 :
            {
                DREADRiskId: ko.observable(""),
                SeverityNm: ko.observable(""),
                RiskMin: ko.observable(""),
                RiskMax: ko.observable(""),
                UserIdLogin:UserIdLogin,
            },

            remove: function(ratingId) {
                ShowDecisionMessage("Are you sure to delete this record ? ", function () {

                    var btnOk = function () {

                    }
                    $.ajax({
                        type: "POST",
                        url: server + "/Admin/DeleteDREADRating",
                        data: JSON.stringify({ ratingId: ratingId }),
                        contentType: "application/json; charset=utf-8",
                        error: function (xhr) { },
                        success: function (msg) {
                            if (msg.OK) {
                                ShowMessageSuccess("Record successfully deleted.", btnRefresh);
                            }
                            else {
                                ShowMessageDanger('Unsuccesfully deleted.');
                            }
                        }
                    })

                });
            },
            add: function () {
                $('#RatingAdd').modal('show');
            },
            update: function (ratingId) {

                $.ajax({
                    type: "POST",
                    url: server + "/Admin/GetDREADRatingEdit",
                    data: JSON.stringify({ id: ratingId }),
                    contentType: "application/json; charset=utf-8",
                    error: function (xhr) { },
                    success: function (msg) {
                        if (msg.OK) {
                            $("#SeverityNm1").val(msg.list.SeverityNm);
                            viewModel.rating3.DREADRiskId(msg.list.DREADRiskId);
                            viewModel.rating3.SeverityNm(msg.list.SeverityNm);
                            viewModel.rating3.RiskMin(msg.list.RiskMin);
                            viewModel.rating3.RiskMax(msg.list.RiskMax);

                            $("#RatingEdit").modal({
                                show: 'true',
                                backdrop: 'true',
                                keyboard: 'true'
                            });

                        }
                    }
                });
            },
            saveDialog: function () {
                var value = $("#addForm").validationEngine('validate');

                if (value == true) {
                    $.ajax({
                        type: 'POST',
                        url: '/Admin/AddDREADRating',//controller/nama function
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify({ modelss: ko.mapping.toJS(viewModel.rating2) }), //parameter

                        success: function (msg) {

                            if (msg.ok) {
                                $('#RatingAdd').modal('hide');
                                ShowMessageSuccess("Data successfully add.",btnRefresh);
                            }
                            else {
                                $('#RatingAdd').modal('hide');
                                ShowMessageDanger('Unsuccesfully add.');
                            }

                        },
                        error: function (xhr) {
                        }
                    });
                } else {
                    $("#addForm").validationEngine();
                }
            },
        }

        ko.applyBindings(viewModel);
    });

    function hapus (ratingId) {
        viewModel.remove(ratingId);
    }

    function resetDialog() {
        viewModel.rating2.DREADRiskId("");
        viewModel.rating2.SeverityNm("");
        viewModel.rating2.RiskMin("");
        viewModel.rating2.RiskMax("");
    }

    function cancelDialog() {
        $('#RatingAdd').modal('hide');
    }

    function resetUpdate() {
        viewModel.update(viewModel.rating3.DREADRiskId());
    }

    function cancelUpdate() {
        $('#RatingEdit').modal('hide');
        $('.modal').modal('hide');
    }

    function saveUpdate() {

        var value = $("#editForm").validationEngine('validate');

        viewModel.rating3.SeverityNm(htmlEnc($('#SeverityNm1').val()));

        if (value == true) {
            $.ajax({
                type: "POST",
                url: server + "/Admin/UpdateDREADRating",
                data: JSON.stringify({ modelss: ko.mapping.toJS(viewModel.rating3) }),
                contentType: "application/json; charset=utf-8",
                error: function (xhr) { },
                success: function (msg) {
                    if (msg.OK) {
                        $('#RatingEdit').modal('hide');
                        ShowMessageSuccess("Data successfully update.",btnRefresh);
                    }
                    else {
                        $('#RatingEdit').modal('hide');
                        ShowMessageDanger('Unsuccesfully update.');
                    }
                }
            });
        } else {
            $("#editForm").validationEngine();
        }
    }

    function hapus(ratingId) {
        viewModel.remove(ratingId);
    }

    $(document).ready(function() {
        $('input[type=text][name=min]').change(function() {
            var max = $('#max').val();

            if(max != ''){
                if( parseFloat(this.value) > parseFloat(max) ) {
                    viewModel.rating2.RiskMin("");
                    ShowMessageWarning('Minimum score must less than maximum score.');
                }
            }
            
        });
    });

    $(document).ready(function() {
        $('input[type=text][name=max]').change(function() {
            var min = $('#min').val();
  
            if( parseFloat(this.value) < parseFloat(min) ) {
                viewModel.rating2.RiskMax("");
                ShowMessageWarning('Maximum score must greater than minimum score.');
            }
            });
    });

    $(document).ready(function() {
        $('input[type=text][name=RiskMin]').change(function() {
            var max = $('#RiskMax').val();
  
            if(max != ''){
                if( parseFloat(this.value) > parseFloat(max) ) {
                    viewModel.rating3.RiskMin("");
                    ShowMessageWarning('Minimum score must less than maximum score.');
                }
            }
        });
    });

    $(document).ready(function() {
        $('input[type=text][name=RiskMax]').change(function() {
            var min = $('#RiskMin').val();
  

            if( parseFloat(this.value) < parseFloat(min) ) {
                viewModel.rating3.RiskMax("");
                ShowMessageWarning('Maximum score must greater than minimum score.');
            }
        });
    });

    function isNumberKey(evt)
    {
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode != 46 && charCode > 31 
          && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }
    

    function drawSearchPaginateDT() {

        var searchPaginateDT = "<div id='hidesearch'> Page <input type='text' size='4'  id='paginatesearch' value ='1' onchange='searchPaginateList(this.value)' autocomplete='off'></input></div>";

        $("#drawSearchPaginateDT").html(searchPaginateDT);
    }

    function searchPaginateList(pageNum) {
        var lastPage = $('#pageList').DataTable().page.info().pages;

        if(pageNum > lastPage)
            pageNum = lastPage;

        $('#paginatesearch').val(pageNum);

        var pageIndex = pageNum - 1;
        $('#pageList').DataTable().page(pageIndex).draw('page')

    }
    
    //var table = $('#pageList').DataTable();
 
    //table.on( 'draw', function () {
    //    $('#paginatesearch').val(table.page()+1);
    //    setCookie("listingpage4", table.page()+1, 1);
    //} );
    
    $(document).ready(function(){
        drawSearchPaginateDT();
        checkListingPageCookie2("listingpage4");
    });
</script>
