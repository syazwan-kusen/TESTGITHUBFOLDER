@using Newtonsoft.Json;
@using myvdbsSQL;
@using MyVDBSDemo.Models;
@*@model IEnumerable<MyVDBSDemo.Models.tblCVEDetail>*@
@model MyVDBSDemo.Models.VulnerabilityListDataDetail
@using MVCEncrypt;

@{
    ViewBag.Title = "Vulnerability List";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

}

<body>
    <div id="divLoad" class="col-lg-12" style="margin-top:70px">
        <div class="panel panel-info">

            <div class="panel-body">
                <div id="filter-panel" class="collapse filter-panel ">
                    <div class="col-md-12" style="margin-top: 20px">
                        <div class="row">
                            <div class="col-md-1"></div>
                            <div class="col-md-5">
                                <div class="form-group">
                                    <label for="cve_id" class="col-md-4 control-label">Vulnerability ID</label>

                                    <div class="col-md-8">
                                        <input id="search_cve_id" type="text" class="form-control" maxlength="50" name="search_cve_id" data-bind="value:search.search_cve_id" autofocus>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="form-group">
                                    <label for="type" class="col-md-4 control-label">Vulnerability Description</label>

                                    <div class="col-md-8">
                                        <input id="search_title" type="text" class="form-control" maxlength="50" name="search_title" data-bind="value:search.search_title" autofocus>
                                    </div>
                                </div>
                            </div>
                        </div>
                        </br>
                        <div class="row">
                            <div class="col-md-1"></div>
                            <div class="col-md-5">
                                <div class="form-group">
                                    <label for="type" class="col-md-4 control-label">Vulnerability Type</label>

                                    <div class="col-md-8">
                                        <input id="search_type" type="text" class="form-control" maxlength="200" name="search_type" data-bind="value:search.search_type" autofocus>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="form-group">
                                    <label for="impact_lvl" class="col-md-4 control-label">Severity</label>

                                    <div class="col-md-8">
                                        <input id="search_impact_lvl" type="text" class="form-control" maxlength="15" name="search_impact_lvl" data-bind="value:search.search_impact_lvl" autofocus>
                                    </div>
                                    @*<div class="col-md-8">
                                            <select id="search_impact_lvl" class="form-control" style="width: 60%;" data-bind="value:search.search_impact_lvl, valueUpdate:'afterkeydown'">
                                                <option value="0">--- Please Choose ---</option>
                                                <option value="1">Low</option>
                                                <option value="2">Medium</option>
                                                <option value="3">High</option>
                                                <option value="4">Critical</option>
                                            </select>
                                        </div>*@

                                </div>
                            </div>
                        </div>
                        </br>
                        <div class="row">
                            <div class="col-md-1"></div>
                            <div class="col-md-5">
                                <div class="form-group">
                                    <label for="date_register" id="YearReg"  class="col-md-4 control-label">Register Year</label>

                                    <div class="col-md-5">
                                        <select class="form-control" id="year"></select>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="form-group">
                                    <label for="type" class="col-md-4 control-label">Vendor</label>

                                    <div class="col-md-8">
                                        <input id="search_vendor" type="text" class="form-control" maxlength="50" name="search_vendor" data-bind="value:search.search_vendor" onblur="CheckInput(this.value)" autofocus>
                                    </div>
                                </div>
                                @*<div class="form-group">
                                        <label for="date_register" class="col-md-4 control-label">Register Date</label>

                                        <div class="col-md-5">
                                            <input id="datepicker" type="text" class="form-control" name="date_register" data-bind="value:search.date_register" autofocus>
                                        </div>
                                    </div>*@
                            </div>
                        </div>
                    </div>

                    <div class="col-md-12" align="center" style="margin-top: 20px">
                        <div class="row">
                            <button type="search" class="btn btn-primary btn-sm m-t-10" id="proceed" data-bind="click:SearchListing">
                                <span class="fa fa-search"></span> Proceed
                            </button>
                            @*<button type="reset" class="btn btn-warning btn-sm m-t-10" id="reset" data-bind="click:reset>
                                    <span class="fa fa-refresh"></span> @MyVDBSDemo.Resources.LangText.Reset
                                </button>*@
                            <button id="resetUpdate" class="btn btn-warning btn-sm m-t-10" onclick='reset()'>
                                <span class="glyphicon glyphicon-refresh" aria-hidden="true"></span> @MyVDBSDemo.Resources.LangText.Reset
                            </button>

                        </div>
                    </div>
                    <input type="hidden" name="fromSearch" value="1">

                </div>
                <div class="col-md-12">
                    <p align="right">

                        <a class="btn btn-primary" data-toggle="collapse" data-target="#filter-panel">
                            <span class="glyphicon glyphicon-cog"></span> @MyVDBSDemo.Resources.LangText.Search
                        </a>
                    </p>
                </div>
                <div id="loadingDiv" style="display:none;">
                    <div class="spinner">
                        <div class="rect1"></div>
                        <div class="rect2"></div>
                        <div class="rect3"></div>
                        <div class="rect4"></div>
                        <div class="rect5"></div>
                    </div>
                </div>
                <div class="col-md-12" style="overflow:scroll">
                    <table class="table table-bordered table-striped display" border="0" id="" align="center" width="100%" style="height:150px;border-color:aliceblue;">
                        <thead style="background-color:moccasin">
                            <tr>
                                <th class="text-center">No.</th>
                                <th width="18%" class="text-center">Vulnerability ID</th>
                                <th class="text-center">Vulnerability Description</th>
                                <th width="10%" class="text-center">Vulnerability Type</th>
                                <th width="10%" class="text-center">References</th>
                                <th class="text-center">Severity</th>
                                <th class="text-center">Vendor</th>
                                @*<th class="col-sm-2 text-center">Register Date</th>*@
                                @*<th class="col-sm-2 text-center">Register Date</th>*@

                            </tr>
                        </thead>
                        <tbody id="nodata">
                            <tr class="odd">
                                <td valign="top" colspan="7" class="dataTables_empty text-center"><center>No matching records found</center></td>
                            </tr>
                        </tbody>
                        <tbody data-bind="foreach: VulnerabilityListing">
                            <tr>
                                <td width="3%" data-bind="text: $index() + 1 + viewModel.pageind()" style="text-align:center"></td>
                                <td>
                                    <a id="login" href="#" data-bind="value: IDandAndtblname" onclick='clickCveMyvdbID(this.value);'><font color="blue" data-bind="html: CVEIdMyVDBID"></font></a>
                                </td>
                                <td data-bind="html: Summary"></td>
                                <td data-bind="text: VulnerabilityType"></td>
                                <td width="10%" data-bind="html: Reference"></td>
                                <td data-bind="text: Complexity"></td>
                                <td data-bind="text: ProdVendor"></td>
                                @*<td data-bind="text: PublishDate"></td>*@
                            </tr>
                        </tbody>
                    </table>
                </div>
                
                <div class="col-sm-5" style="margin-top: 20px">
                    <div class="dataTables_info" id="pageList_info" role="status" aria-live="polite"><font data-bind="text:'Showing ' + (viewModel.pageind() + 1) + ' to ' + (viewModel.pageind() + viewModel.totaleachpage()) + ' of ' + viewModel.countAllRow() + ' entries'"></font></div>
                </div>
                <div class="col-sm-7" align="right">
                    @{
                        <input type="hidden" id="pagenum" data-bind="value:pageind" />
                        <div id="drawPaginate1"></div>
                        <div id="drawSearchPaginate1"></div>
                    }
                </div>
                <div class="row">
                    <div class="col-md-12" align="center">

                    </div>
                </div>
            </div>

        </div>
    </div>
</body>

@Html.Partial("VulnerabilityListModel")
@Html.Partial("FindingListUpdateInfoModel")
@Html.Partial("MSListModel")
@Html.Partial("MSListDetails")
@*@Html.Partial("FindingListUpdateInfoModel2")*@
<script src="~/Scripts/Common/DateFormat.js"></script>
<script src="~/Scripts/Common/Pagination.js"></script>
<script>

    var Rating = @Html.Raw(JsonConvert.SerializeObject(@Model, Formatting.None,
        new JsonSerializerSettings()
        {
            ReferenceLoopHandling = ReferenceLoopHandling.Ignore
        }));

    @functions{
        public string TokenHeaderValue()
        {
            string cookieToken, formToken;
            AntiForgery.GetTokens(null, out cookieToken, out formToken);
            return cookieToken + ":" + formToken;                
        }
    }
</script>

<script>

    $("#datepicker").datepicker({
        changeMonth: false,
        changeYear: true,
        dateFormat: 'yy'
    });


    var inputMapper = {
        "CVEId": 2,
        "VulnerabilityType" : 3,
        "Complexity" : 4,
        "PublishDate" : 5
    };
    // Initialize DataTables
    var dtInstance = $("#pageList").DataTable({
        "scrollCollapse": false,
        "paging": true,
        "columnDefs": [{
            "searchable": false,
            "orderable": false,
            "targets": 0
        }],
        //"order": [[1, 'asc']],
        bLengthChange: true,
        mark: true
    });

    dtInstance.on('order.dt search.dt', function () {
        dtInstance.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
            cell.innerHTML = i + 1;
        });
    }).draw();

    // Trigger DataTables redraw on search keyword change
    $("input").on("input", function () {
        var $this = $(this);
        var val = $this.val();
        var key = $this.attr("name");

        // Search inside DataTable column
        // subtract -1 because :nth-child starts with 1,
        // DataTables with 0
        dtInstance.columns(inputMapper[key] - 1).search(val).draw();
    });


    var viewModel;
    var UserIdLogin = '@User.Identity.Name';


    $(function () {


        viewModel = {
            rating1: ko.mapping.fromJS(Rating),
            CVEProductList: ko.observable(""),
            CVEProductListCveDetail: ko.observable(""),
            VulListInfo :
            {
                Id: ko.observable(""),
                CVEId: ko.observable(""),
                MyVDBID: ko.observable(""),
                VulnerabilityType: ko.observable(""),
                Summary: ko.observable(""),
                ImprovementRmk: ko.observable(""),
                PublishDate: ko.observable(),
                Complexity: ko.observable(""),
                tblname: ko.observable(""),
                UrlLink: ko.observable(""),
                Score: ko.observable(""),
                IDData :  ko.observable(""),
                Reference :  ko.observable(""),
                CWEId :  ko.observable(""),
                CWENm :  ko.observable(""),
                CWEDefDesc :  ko.observable(""),
                CWEDefURL :  ko.observable(""),
                CVSSRatingNm :  ko.observable(""),
                CrawlerProduct:  ko.observable(""),
                CVSSV3Vector:  ko.observable(""),
                CVSSV3Score: ko.observable(""),
                CVSSV2Vector:  ko.observable(""),
                NVDLoad:  ko.observable(""),
                NVDUrlLink:  ko.observable(""),

            },

            VulListInfoDetail :
            {
                CVEId: ko.observable(""),
                MyVDBID: ko.observable(""),
                VulNm: ko.observable(""),
                VulCategoryNm: ko.observable(""),
                VulTypeNm: ko.observable(""),
                VulType: ko.observable(""),
                ObservationRmk: ko.observable(""),
                ImpactLvl: ko.observable(""),
                ImpactRmk: ko.observable(""),
                Status: ko.observable(""),
                CVSSScore: ko.observable(""),
                DreadScore: ko.observable(""),
                ImprovementRmk: ko.observable(""),
                VulManInputAffItemDetail: ko.observableArray(""),
                VulManInputScreenshotDetail: ko.observableArray(""),
                ValidCveID: ko.observable(""),
                VulnerabilityCSMCdCombine: ko.observable(""),
                VulSecComp: ko.observable(""),
                CWEId: ko.observable(""),
                CWENm: ko.observable(""),
                Description: ko.observable(""),
                UrlLink: ko.observable(""),
                VulManInputProductInfoDetail: ko.observableArray(""),
                Reference :  ko.observable(""),
                CVSSVector:  ko.observable(""),
                CVSSV2Score: ko.observable(""),
                CVSSV2Vector:  ko.observable(""),
            },

            VulListInfoCveDetail :
            {
                Id: ko.observable(""),
                CVEId: ko.observable(""),
                MyVDBID: ko.observable(""),
                VulnerabilityType: ko.observable(""),
                Summary: ko.observable(""),
                ImprovementRmk: ko.observable(""),
                PublishDate: ko.observable(),
                Complexity: ko.observable(""),
                tblname: ko.observable(""),
                UrlLink: ko.observable(""),
                Score: ko.observable(""),
                IDData :  ko.observable(""),
                Reference :  ko.observable(""),
                CWEId :  ko.observable(""),
                CWENm :  ko.observable(""),
                CWEDefDesc :  ko.observable(""),
                CWEDefURL :  ko.observable(""),
                CVSSRatingNm :  ko.observable(""),
                VulManInputProductInfoDetail: ko.observableArray(""),
                CVSSV3Vector:  ko.observable(""),
                CVSSV3Score: ko.observable(""),
                CVSSV2Vector:  ko.observable(""),
                NVDLoad:  ko.observable(""),
                NVDUrlLink:  ko.observable(""),
            },

            search :
            {
                search_cve_id: ko.observable(""),
                search_type: ko.observable(""),
                search_impact_lvl: ko.observable(""),
                search_year: ko.observable(""),
                search_title : ko.observable(""),
                search_vendor : ko.observable(""),
            },


            ValidCveID: ko.observable(""),

            MSListInfo :
            {
                MSId: ko.observable(""),
                Title: ko.observable(""),
                Severity: ko.observable(""),
                PublishDate: ko.observable(""),
                Content: ko.observable(""),
                Software: ko.observableArray(""),
            },

            VulnerabilityListing: ko.observable(""),
            //VulnerabilityListing: ko.observableArray([]),
            pageind: ko.observable(0),
            onclickCVEIdMyVDBID: ko.observable(""),

            checking :
            {
               CveOnclick: ko.observable(""),
            },

            countAllRow : ko.observable(""),
            totaleachpage : ko.observable(""),
            linkValidUrl: ko.observable(""),
            GetPath: ko.observable(""),
          

            clickCveMyvdbIDInfo: function (Id,tblname) {
                $.ajax({
                    type: "POST",
                    url: server + "/Admin/VulnerabilityListInfo",
                    data: JSON.stringify({ id: Id , tblname :tblname}),
                    contentType: "application/json; charset=utf-8",
                    headers: {
                        'RequestVerificationToken': '@TokenHeaderValue()'
                    },
                    success: function (msg) {
                        if (msg.OK) {
                            viewModel.VulListInfo.Id(msg.list.VulnerabilityListInformation.Id);
                            viewModel.VulListInfo.CVEId(msg.list.VulnerabilityListInformation.CVEId);
                            viewModel.VulListInfo.MyVDBID(msg.list.VulnerabilityListInformation.MyVDBID);
                            viewModel.VulListInfo.VulnerabilityType(msg.list.VulnerabilityListInformation.VulnerabilityType);
                            viewModel.VulListInfo.Summary(msg.list.VulnerabilityListInformation.Summary);
                            viewModel.VulListInfo.ImprovementRmk(msg.list.VulnerabilityListInformation.ImprovementRmk);

                            viewModel.VulListInfo.PublishDate(msg.list.VulnerabilityListInformation.PublishDate);
                            var date = msg.list.VulnerabilityListInformation.PublishDate;
                            if (date == null) {
                                viewModel.VulListInfo.PublishDate('-');
                            }else{
                                var nowDate = new Date(parseInt(date.substr(6)));
                                var result = "";
                                result += nowDate.format("dd/mm/yyyy");
                                viewModel.VulListInfo.PublishDate(result);
                            }
                            //var nowDate = new Date(parseInt(date.substr(6)));
                            //var result = "";
                            //result += nowDate.format("dd/mm/yyyy");
                            //viewModel.VulListInfo.PublishDate(result);

                            viewModel.VulListInfo.Complexity(msg.list.VulnerabilityListInformation.Complexity);
                            viewModel.VulListInfo.tblname(msg.list.VulnerabilityListInformation.tblname);

                            if(msg.list.VulnerabilityListInformation.tblname == 'CVEDetail'){
                                viewModel.VulListInfo.NVDLoad('yes');
                                viewModel.VulListInfo.NVDUrlLink('https://nvd.nist.gov/vuln/detail/' + msg.list.VulnerabilityListInformation.CVEId)

                            }
                            else{
                                viewModel.VulListInfo.NVDLoad('');
                                viewModel.VulListInfo.NVDUrlLink('')
                            }

                            viewModel.VulListInfo.UrlLink(msg.list.VulnerabilityListInformation.UrlLink);
                            viewModel.VulListInfo.Score(msg.list.VulnerabilityListInformation.Score);

                            if(msg.list.VulnerabilityListInformation.Score == null)
                            {
                                viewModel.VulListInfo.Score(0);
                            }
                            viewModel.VulListInfo.CVSSV3Score(msg.list.VulnerabilityListInformation.CVSSScoreV3);  //cvssscore V3 
                            if(msg.list.VulnerabilityListInformation.CVSSScoreV3 == null)
                            {
                                viewModel.VulListInfo.CVSSV3Score(0);
                            }

                            viewModel.VulListInfo.CVSSV3Vector(msg.list.VulnerabilityListInformation.CVSSVectorV3); 
                            if ((msg.list.VulnerabilityListInformation.CVSSVectorV3 == null || msg.list.VulnerabilityListInformation.CVSSVectorV3 == "")){                               
                                viewModel.VulListInfo.CVSSV3Vector("-");
                            }else{
                                viewModel.VulListInfo.CVSSV3Vector(msg.list.VulnerabilityListInformation.CVSSVectorV3); 
                            }
                            viewModel.VulListInfo.CVSSV2Vector(msg.list.VulnerabilityListInformation.CVSSVectorV2); 
                            if ((msg.list.VulnerabilityListInformation.CVSSVectorV2 == null || msg.list.VulnerabilityListInformation.CVSSVectorV2 == "")){                              
                                viewModel.VulListInfo.CVSSV2Vector("-");
                            }else{
                                viewModel.VulListInfo.CVSSV2Vector(msg.list.VulnerabilityListInformation.CVSSVectorV2); 
                            }


                            viewModel.VulListInfo.CVSSRatingNm(msg.list.VulnerabilityListInformation.CVSSRatingNm);

                            if ((msg.list.VulnerabilityListInformation.CVEId == null || msg.list.VulnerabilityListInformation.CVEId == "") && (msg.list.VulnerabilityListInformation.MyVDBID != null || msg.list.VulnerabilityListInformation.MyVDBID != "")  ){
                                 viewModel.VulListInfo.IDData(msg.list.VulnerabilityListInformation.MyVDBID);
                            }
                            else if ((msg.list.VulnerabilityListInformation.CVEId != null || msg.list.VulnerabilityListInformation.CVEId != "") && (msg.list.VulnerabilityListInformation.MyVDBID == null || msg.list.VulnerabilityListInformation.MyVDBID == "")  ){
                                 viewModel.VulListInfo.IDData(msg.list.VulnerabilityListInformation.CVEId);
                            }
                            else if ((msg.list.VulnerabilityListInformation.CVEId != null || msg.list.VulnerabilityListInformation.CVEId != "") && (msg.list.VulnerabilityListInformation.MyVDBID != null || msg.list.VulnerabilityListInformation.MyVDBID != "")  ){
                                viewModel.VulListInfo.IDData(msg.list.VulnerabilityListInformation.CVEId + " / " + msg.list.VulnerabilityListInformation.MyVDBID);
                            }
                            else{
                                viewModel.VulListInfo.IDData("-");
                            }


                            //hyperlink untuk vulnerability ID
                            var countCveID = 0;
                            var data1 = viewModel.VulListInfo.IDData().split('/');
                            var DatacveID = data1[0];
                            var DataMyVDBID = data1[1];
                            var data2 = DatacveID.split(',');
                            tableCveID = "";
               
                            if(DataMyVDBID != undefined){
                                for (i = 0; i < data2.length; i++) {
                                    var path = data2[i];
                                    viewModel.GetlinkInfo(path);
                                    //viewModel.GetPath(path);
                                    //alert(viewModel.linkValidUrl());
                                    if(viewModel.linkValidUrl() != ""){
                                        //tableCveID += "<a href='"+ viewModel.linkValidUrl() +"' target='_blank'><font color='blue'>" + path + "</font></a>";
                                        tableCveID += "<a href='#' onclick='Click_CVEID(\""+path+"\","+Id+",\""+tblname+"\")'><font color='blue'>" + path + "</font></a>";
                                    }else{
                                        tableCveID += path ;
                                    }

                                    if (i < data2.length - 1){ // untuk separete by ,
                                        tableCveID += ",";
                                    }else{
                                      
                                        //if(tableCveID.trim() == "-"){
                                        //    tableCveID = "<a href='#' onclick='urlLinkClick()'><font color='blue'>" + DataMyVDBID + "</font></a>";
                                        //}else{
                                        //    tableCveID = "<a href='#' onclick='urlLinkClick()'><font color='blue'>" + DataMyVDBID + "</font></a>" + " / " + tableCveID;
                                        //}
                                       
                                        if(msg.list.VulnerabilityListInformation.tblname != 'CrawlerInput'){
                                         
                                            // document.getElementById("hover1").style.display = "block";
                                            if(tableCveID.trim() == "-"){
                                                tableCveID = "<a href='#' onclick='urlLinkClick()'><font color='blue'>" + DataMyVDBID + "</font></a>"; //DataMyVDBID
                                            }else{
                                                tableCveID = "<a href='#' onclick='urlLinkClick()'><font color='blue'>" + DataMyVDBID + "</font></a>" + " / " + tableCveID;
                                            }                                     
                                        }
                                        else{
                                            document.getElementById("hover1").style.display = "none";
                                            document.getElementById("CrawlerProd").style.display = "block";
                                            if(tableCveID.trim() == "-"){
                                                tableCveID = DataMyVDBID; //DataMyVDBID
                                            }else{
                                                tableCveID = DataMyVDBID + " / " + tableCveID;
                                            }       
                                        }
                                    }
                                }
                            }
                            else{
                                tableCveID = DatacveID;
                            }


                            document.getElementById("LinkVulnerabilityID").innerHTML = tableCveID;

                            //end hyperlink

                            if (msg.list.VulnerabilityListInformation.Summary == null){
                                viewModel.VulListInfo.Summary("-");
                            }
                            else{
                                viewModel.VulListInfo.ImprovementRmk(msg.list.VulnerabilityListInformation.Summary);
                            }

                            if (msg.list.VulnerabilityListInformation.ImprovementRmk == null){
                                viewModel.VulListInfo.ImprovementRmk("-");
                            }
                            else{
                                viewModel.VulListInfo.ImprovementRmk(msg.list.VulnerabilityListInformation.ImprovementRmk);
                            }

                            if (msg.list.VulnerabilityListInformation.Complexity == 1){
                                viewModel.VulListInfo.Complexity("Low");
                            }
                            else if (msg.list.VulnerabilityListInformation.Complexity == 2){
                                viewModel.VulListInfo.Complexity("Medium");
                            }
                            else if (msg.list.VulnerabilityListInformation.Complexity == 3){
                                viewModel.VulListInfo.Complexity("High");
                            }
                            else if (msg.list.VulnerabilityListInformation.Complexity == 4){
                                viewModel.VulListInfo.Complexity("Critical");
                            }
                            else if (msg.list.VulnerabilityListInformation.Complexity == 0){
                                viewModel.VulListInfo.Complexity("No Impact Level");
                            }
                            else{
                                viewModel.VulListInfo.Complexity(msg.list.VulnerabilityListInformation.Complexity);
                            }

                            viewModel.VulListInfo.Reference(msg.list.VulnerabilityListInformation.Reference);
                            viewModel.VulListInfo.CWEId(msg.list.VulnerabilityListInformation.CWEId);
                            viewModel.VulListInfo.CWENm(msg.list.VulnerabilityListInformation.x.CWENm);
                            viewModel.VulListInfo.CWEDefDesc(msg.list.VulnerabilityListInformation.x.Description);
                            viewModel.VulListInfo.CWEDefURL(msg.list.VulnerabilityListInformation.x.UrlLink);
                            viewModel.CVEProductList(msg.list.CVEProductInformation);
                            //if (msg.list.VulnerabilityListInformation.tblname == "VulManInput"){
                            //    viewModel.VulListInfo.tblname("VulManInput");
                            //}
                            //else{
                            //    viewModel.VulListInfo.tblname(msg.list.VulnerabilityListInformation.tblname);
                            //}


                            //set untuk tukar bground colour markah
                            var bil = $('#bilangan_score').val();
                            var element = document.getElementById('scoreColour');
                            if(bil == 0.00){
                                //alert(1);
                                element.className = '';
                                element.classList.add("scoreRating","none");
                            }else if ( bil >= 0.1 && bil <= 3.9){
                                //alert(2);
                                element.className = '';
                                element.classList.add("scoreRating","low");
                            }else if (bil >= 4.0 && bil <= 6.9){
                                //alert(3);
                                element.className = '';
                                element.classList.add("scoreRating","medium");
                            }
                            else if (bil >= 7.0 && bil <= 8.9){
                                //alert(4);
                                element.className = '';
                                element.classList.add("scoreRating","high");
                            }
                            else if (bil >= 9.0){
                                //alert(5);
                                element.className = '';
                                element.classList.add("scoreRating","critical");
                            }


                            var bilV2 = $('#bilangan_scoreV2').val();
                            var element2 = document.getElementById('scoreColourV2');
    
                            if(bilV2 == 0.00){
                                //alert(1);
                                element2.className = '';
                                element2.classList.add("scoreRatingV2","none");
                            }else if ( bilV2 >= 0.1 && bilV2 <= 3.9){
                                //alert(2);
                                element2.className = '';
                                element2.classList.add("scoreRatingV2","low");
                            }else if (bilV2 >= 4.0 && bilV2 <= 6.9){
                                //alert(3);
                                element2.className = '';
                                element2.classList.add("scoreRatingV2","medium");
                            }
                            else if (bilV2 >= 7.0 && bilV2 <= 8.9){
                                //alert(4);
                                element2.className = '';
                                element2.classList.add("scoreRatingV2","high");
                            }
                            else if (bilV2 >= 9.0){
                                //alert(5);
                                element2.className = '';
                                element2.classList.add("scoreRatingV2","critical");
                            }


                            var text, parser, xmlDoc;

                            //add baca xml data dan list dalam ui
                            var xmldata = viewModel.VulListInfo.Reference();

                            parser = new DOMParser();
                            xmlDoc = parser.parseFromString(xmldata,"text/xml");

                            var x,xmlhttp,xmlDoc

                            x = xmlDoc.getElementsByTagName("Reference");
                            //alert(x.length);
                            table="";
                            for (i = 0; i <x.length; i++) {
                                var path = (x[i].getElementsByTagName("Url")[0].childNodes[0].nodeValue);
                                table += "<tr><td style='color:blue;'><a href='"+ path +"' target='_blank' rel='noopener noreferrer'><font color='blue'>" + path + "</font></a>";
                                //table +=  x[i].getElementsByTagName("Url")[0].childNodes[0].nodeValue.link(path);
                                table += "</td></br></tr>";

                            }

                            if(x.length == 0){
                                document.getElementById("demo").innerHTML = "-";
                            }else{
                                document.getElementById("demo").innerHTML = table;
                            }

                            //end add


                            //untuk cveid


                            //clse untuk cveID




                            $('#VulListInfo').modal({
                                backdrop: false,
                                show: true
                            });

                            //$('.modal-dialog').draggable({
                            //    handle: ".modal-header"
                            //});


                        }
                    }
                });
            },

            clickUrlLink: function (id,name) {

                $.ajax({
                    type: "POST",
                    url: server + "/Admin/FindingListUpdateInfo",
                    data: JSON.stringify({ id: id, name:name }),
                    contentType: "application/json; charset=utf-8",
                    success: function (msg) {
                        if (msg.OK) {
                            viewModel.VulListInfoDetail.CVEId(msg.list.VulManInput.CVEId);
                            viewModel.VulListInfoDetail.MyVDBID(msg.list.VulManInput.MyVDBID);
                            viewModel.VulListInfoDetail.VulNm(msg.list.VulManInput.VulNm);
                            viewModel.VulListInfoDetail.VulCategoryNm(msg.list.VulManInput.y.VulCategoryNm);
                            viewModel.VulListInfoDetail.VulTypeNm(msg.list.VulManInput.x.VulNm);
                            viewModel.VulListInfoDetail.VulType(msg.list.VulManInput.VulType);
                            viewModel.VulListInfoDetail.ObservationRmk(msg.list.VulManInput.ObservationRmk);
                            viewModel.VulListInfoDetail.ImpactLvl(msg.list.VulManInput.SeverityNm);

                            //if (msg.list.VulManInput.ImpactLvl == 1){
                            //    viewModel.VulListInfoDetail.ImpactLvl("Low");
                            //}
                            //else if (msg.list.VulManInput.ImpactLvl == 2){
                            //    viewModel.VulListInfoDetail.ImpactLvl("Medium");
                            //}
                            //else if (msg.list.VulManInput.ImpactLvl == 3){
                            //    viewModel.VulListInfoDetail.ImpactLvl("High");
                            //}
                            //else if (msg.list.VulManInput.ImpactLvl == 4){
                            //    viewModel.VulListInfoDetail.ImpactLvl("Critical");
                            //}
                            //else if (msg.list.VulManInput.ImpactLvl == 0){
                            //    viewModel.VulListInfoDetail.ImpactLvl("No Impact Level");
                            //}
                            //else{
                            //    viewModel.VulListInfoDetail.ImpactLvl(msg.list.VulManInput.ImpactLvl);
                            //}

                            viewModel.VulListInfoDetail.ImpactRmk(msg.list.VulManInput.ImpactRmk);
                            viewModel.VulListInfoDetail.Status(msg.list.VulManInput.Status);
                            viewModel.VulListInfoDetail.CVSSScore(msg.list.VulManInput.CVSSScore);
                            viewModel.VulListInfoDetail.DreadScore(msg.list.VulManInput.DreadScore);
                            viewModel.VulListInfoDetail.VulManInputAffItemDetail(msg.list.VulManInputAffItem);
                            viewModel.VulListInfoDetail.VulManInputScreenshotDetail(msg.list.VulManInputScreenshot);
                            viewModel.VulListInfoDetail.ImprovementRmk(msg.list.VulManInput.ImprovementRmk);
                            viewModel.VulListInfoDetail.ValidCveID(msg.ValidCveID);

                            viewModel.VulListInfoDetail.VulnerabilityCSMCdCombine(msg.list.VulManInput.VulnerabilityCSMCdCombine);
                            viewModel.VulListInfoDetail.VulSecComp(msg.list.VulManInput.VulSecComp);
                            viewModel.VulListInfoDetail.CWEId(msg.list.VulManInput.CWEId);
                            viewModel.VulListInfoDetail.CWENm(msg.list.VulManInput.z.CWENm);
                            viewModel.VulListInfoDetail.Description(msg.list.VulManInput.z.Description);
                            viewModel.VulListInfoDetail.UrlLink(msg.list.VulManInput.z.UrlLink);
                            viewModel.VulListInfoDetail.VulManInputProductInfoDetail(msg.list.VulManInputProductInfo);
                            viewModel.VulListInfoDetail.Reference(msg.list.VulManInput.Reference);
                            viewModel.VulListInfoDetail.CVSSVector(msg.list.VulManInput.CVSSVector);
                            viewModel.VulListInfoDetail.CVSSV2Vector(msg.list.VulManInput.CVSS2Vector);
                            viewModel.VulListInfoDetail.CVSSV2Score(msg.list.VulManInput.CVSS2Score);

                            var bil = $('#bilangan_score2').val();
                            var element = document.getElementById('scoreColour2');
                            if(bil == 0.00){
                                //alert(1);
                                element.className = '';
                                element.classList.add("scoreRating","none");
                            }else if ( bil >= 0.1 && bil <= 3.9){
                                //alert(2);
                                element.className = '';
                                element.classList.add("scoreRating","low");
                            }else if (bil >= 4.0 && bil <= 6.9){
                                //alert(3);
                                element.className = '';
                                element.classList.add("scoreRating","medium");
                            }
                            else if (bil >= 7.0 && bil <= 8.9){
                                //alert(4);
                                element.className = '';
                                element.classList.add("scoreRating","high");
                            }
                            else if (bil >= 9.0){
                                //alert(5);
                                element.className = '';
                                element.classList.add("scoreRating","critical");
                            }


                            var bilV2 = $('#bilangan_score2V2').val();
                            var element2 = document.getElementById('scoreColour2V2');
    
                            if(bilV2 == 0.00){
                                //alert(1);
                                element2.className = '';
                                element2.classList.add("scoreRatingV2","none");
                            }else if ( bilV2 >= 0.1 && bilV2 <= 3.9){
                                //alert(2);
                                element2.className = '';
                                element2.classList.add("scoreRatingV2","low");
                            }else if (bilV2 >= 4.0 && bilV2 <= 6.9){
                                //alert(3);
                                element2.className = '';
                                element2.classList.add("scoreRatingV2","medium");
                            }
                            else if (bilV2 >= 7.0 && bilV2 <= 8.9){
                                //alert(4);
                                element2.className = '';
                                element2.classList.add("scoreRatingV2","high");
                            }
                            else if (bilV2 >= 9.0){
                                //alert(5);
                                element2.className = '';
                                element2.classList.add("scoreRatingV2","critical");
                            }


                            var text, parser, xmlDoc;

                            //add baca xml data dan list dalam ui
                            var xmldata = viewModel.VulListInfoDetail.Reference();

                            parser = new DOMParser();
                            xmlDoc = parser.parseFromString(xmldata,"text/xml");

                            var x,xmlhttp,xmlDoc

                            x = xmlDoc.getElementsByTagName("Reference");
                            //alert(x.length);
                            table="";
                            for (i = 0; i <x.length; i++) {
                                var path = (x[i].getElementsByTagName("Url")[0].childNodes[0].nodeValue);
                                table += "<tr><td style='color:blue;'><a href='"+ path +"' target='_blank' rel='noopener noreferrer'><font color='blue'>" + path + "</font></a>";
                                //table +=  x[i].getElementsByTagName("Url")[0].childNodes[0].nodeValue.link(path);
                                table += "</td></br></tr>";

                            }

                            if(x.length == 0){
                                document.getElementById("demo2").innerHTML = "-";
                            }else{
                                document.getElementById("demo2").innerHTML = table;
                            }

                            //end add

                            //hyperlink untuk vulnerability ID

                            if(msg.list.VulManInput.CVEId !=  null){
                                var data2 = msg.list.VulManInput.CVEId.split(',');
                                tableCveID = "";
                                tableCveID2 = "";

                                for (i = 0; i < data2.length; i++) {
                                    var path = data2[i];
                                    viewModel.GetlinkInfo(path);
                                    //alert(viewModel.linkValidUrl());
                                    if(viewModel.linkValidUrl() != ""){
                                        tableCveID += "<a href='"+ viewModel.linkValidUrl() +"' target='_blank' rel='noopener noreferrer'><font color='blue'>" + path + "</font></a>";
                                        tableCveID2 += "<a href='#' onclick='Click_CVEID(\""+path+"\","+id+",\""+name+"\")'><font color='blue'>" + path + "</font></a>";

                                    }else{
                                        tableCveID += path ;
                                        tableCveID2 += path ;
                                    }

                                    if (i < data2.length - 1){ // untuk separete by ,
                                        tableCveID += ",";
                                        tableCveID2 += ",";
                                    }
                                    else{
                                        //if(tableCveID.trim() == "-"){
                                        //    tableCveID = "<a href='#' onclick='urlLinkClick()'><font color='blue'>" + viewModel.VulListInfoDetail.MyVDBID() + "</font></a>";
                                        //}else{
                                        //    tableCveID = "<a href='#' onclick='urlLinkClick()'><font color='blue'>" + viewModel.VulListInfoDetail.MyVDBID() + "</font></a>" + " / " + tableCveID;
                                        //}

                                        if(tableCveID2.trim() == "-"){
                                            tableCveID2 = "<a href='#' onclick='urlLinkClick()'><font color='blue'>" + viewModel.VulListInfoDetail.MyVDBID() + "</font></a>";
                                        }else{
                                            tableCveID2 = "<a href='#' onclick='urlLinkClick()'><font color='blue'>" + viewModel.VulListInfoDetail.MyVDBID() + "</font></a>" + " / " + tableCveID2;
                                        }
                                    }
                                }
                            }
                            else{
                                tableCveID = "";
                                tableCveID2 = "";
                            }

                            //document.getElementById("LinkVulnerabilityID").innerHTML = tableCveID;
                            //document.getElementById("LinkVulnerabilityID2").innerHTML = tableCveID2 + " / " + viewModel.VulListInfoDetail.MyVDBID();
                            document.getElementById("LinkVulnerabilityID2").innerHTML = tableCveID2;                           
                            document.getElementById("LinkVulnerabilityID3").innerHTML = tableCveID;
                            //end hyperlink


                            if (msg.list.VulManInput.Status == null){
                                viewModel.VulListInfoDetail.Status("");
                            }
                            else if (msg.list.VulManInput.Status == 1){
                                viewModel.VulListInfoDetail.Status("Open");
                            }
                            else if (msg.list.VulManInput.Status == 0){
                                viewModel.VulListInfoDetail.Status("Close");
                            }
                            else{
                                viewModel.VulListInfoDetail.Status("");
                            }


                            //function oQuickReplyswap() {
                            //    alert(viewmodel.VulListInfo.References());
                            //}


                            //$('#FindingListUpdateInfoModel').modal({
                            //    backdrop: false,
                            //    show: true
                            //});

                            $('#VulListInfo2').modal({
                                backdrop: false,
                                show: true
                            });


                            $('#VulListInfo').modal('hide');
                            $('#VulListInfo3').modal('hide');

                            document.getElementById("splitRight").style.display = "block";

                            //$('.modal-dialog').draggable({
                            //    handle: ".panel-heading"
                            //});

                            //$("#FindingListUpdateInfoModel").modal({
                            //    show: 'true',
                            //    backdrop: 'false',
                            //    keyboard: 'true'
                            //});


                            //$('#FindingListUpdateInfoModel .modal-dialog').draggable({
                            //    handle: ".modal-header"
                            //});

                        }
                    }
                });
            },

            clickMSDetailInfo: function (Id) {

                $.ajax({
                    type: "POST",
                    url: server + "/Admin/MSDetailInfo",
                    data: JSON.stringify({ id: Id }),
                    contentType: "application/json; charset=utf-8",
                    success: function (msg) {
                        if (msg.OK) {
                            viewModel.MSListInfo.MSId(msg.list.MSDetailInformation.MSId);
                            viewModel.MSListInfo.Title(msg.list.MSDetailInformation.Title);
                            viewModel.MSListInfo.Severity(msg.list.MSDetailInformation.Severity);
                            viewModel.MSListInfo.Content(msg.list.MSDetailInformation.Content);
                            viewModel.MSListInfo.Software(msg.list.tblMSAffectedInformation);
                            viewModel.MSListInfo.PublishDate(msg.list.MSDetailInformation.PublishDate);
                            var date = msg.list.MSDetailInformation.PublishDate;
                            if (date == null) {
                                viewModel.MSListInfo.PublishDate('-');
                            }else{
                                var nowDate = new Date(parseInt(date.substr(6)));
                                var result = "";
                                result += nowDate.format("dd/mm/yyyy");
                                viewModel.MSListInfo.PublishDate(result);
                            }
                            //var nowDate = new Date(parseInt(date.substr(6)));
                            //var result = "";
                            //result += nowDate.format("dd/mm/yyyy");
                            //viewModel.MSListInfo.PublishDate(result);


                            $("#MSListInfo").modal({
                                show: 'true',
                                backdrop: 'true',
                                keyboard: 'true'
                            });

                        }
                    }
                });
            },

            searchFunctionBasedonPaginate: function (year,pageind,search_cve_id,search_type,search_impact_lvl,search_title, search_vendor) {

                $.ajax({
                        type: "POST",
                        url: server + "/Admin/VulnerabilityListTable",
                        data: JSON.stringify({ year: year ,pageind : pageind, search_cve_id : search_cve_id, search_type : search_type, search_impact_lvl : search_impact_lvl , search_title : search_title, search_vendor: search_vendor}),
                        headers: {
                            'RequestVerificationToken': '@TokenHeaderValue()'
                        },
                        contentType: "application/json; charset=utf-8",
                        error: function (xhr) { },
                        success: function (msg) {
                            if (msg.OK) {

                                viewModel.VulnerabilityListing(msg.list.VulnerabilityList);
                                viewModel.countAllRow(msg.list.GetTotalVulnerabilityList.countAllRow);
                                viewModel.totaleachpage(viewModel.VulnerabilityListing().length);



                            }
                            else{

                            }
                        }
                });

            },

            searchFunctionBasedonPaginate2: function (year,pageind,search_cve_id,search_type, search_impact_lvl,search_title, search_vendor) {

                // location.href = "/User/VulnerabilityList/'" + year + "'";
                //window.location.href = "/User/VulnerabilityList?year=" + year +"&pageind="+ pageind;
                $.ajax({
                    type: "POST",
                    url: server + "/Admin/VulnerabilityListTable",
                    data: JSON.stringify({ year: year ,pageind : pageind,search_cve_id : search_cve_id, search_type : search_type, search_impact_lvl : search_impact_lvl,search_title : search_title, search_vendor:search_vendor }),
                    headers: {
                        'RequestVerificationToken': '@TokenHeaderValue()'
                    },
                    contentType: "application/json; charset=utf-8",
                    error: function (xhr) { },
                    success: function (msg) {
                        if (msg.OK) {

                            viewModel.VulnerabilityListing(msg.list.VulnerabilityList);
                            viewModel.countAllRow(msg.list.GetTotalVulnerabilityList.countAllRow);
                            viewModel.totaleachpage(viewModel.VulnerabilityListing().length);

                            paginateCLICK(0, 1);

                        }
                        else{

                        }
                    }
                });

            },

            SearchListing: function () {
                paginateCLICK2(0, 1)
            },


            GetlinkInfo : function(CVEID){

                $.ajax({
                    type: "POST",
                    url: server + "/Admin/GetCheckValidCveID",
                    async: false,
                    data: JSON.stringify({ CVEID: CVEID }),
                    contentType: "application/json; charset=utf-8",
                    error: function (xhr) { },
                    success: function (msg) {
                        if (msg.OK) {
                            //window.open(msg.list, '_blank');
                            viewModel.linkValidUrl(msg.list);

                        }
                        else {
                            ShowMessageDanger('Error.');
                        }
                    }
                });

            },

            clickUrlLinkUsePath: function (Path,Id,tblname) {
                $.ajax({
                    type: "POST",
                    url: server + "/Admin/VulnerabilityListInfoPath",
                    data: JSON.stringify({ Path: Path, Id:Id, tblname:tblname}),
                    contentType: "application/json; charset=utf-8",
                    success: function (msg) {
                        if (msg.OK) {

                            //-------------------------------------------------------------------------------------------------------------------
                            viewModel.VulListInfoCveDetail.Id(msg.list.VulnerabilityListInformationCveDetail.Id);
                            viewModel.VulListInfoCveDetail.CVEId(msg.list.VulnerabilityListInformationCveDetail.CVEId);
                            viewModel.VulListInfoCveDetail.MyVDBID(msg.list.VulnerabilityListInformationCveDetail.MyVDBID);
                            viewModel.VulListInfoCveDetail.VulnerabilityType(msg.list.VulnerabilityListInformationCveDetail.VulnerabilityType);
                            viewModel.VulListInfoCveDetail.Summary(msg.list.VulnerabilityListInformationCveDetail.Summary);
                            viewModel.VulListInfoCveDetail.ImprovementRmk(msg.list.VulnerabilityListInformationCveDetail.ImprovementRmk);

                            viewModel.VulListInfoCveDetail.PublishDate(msg.list.VulnerabilityListInformationCveDetail.PublishDate);
                            var date = msg.list.VulnerabilityListInformationCveDetail.PublishDate;
                            if (date == null) {
                                viewModel.VulListInfoCveDetail.PublishDate('-');
                            }else{
                                var nowDate = new Date(parseInt(date.substr(6)));
                                var result = "";
                                result += nowDate.format("dd/mm/yyyy");
                                viewModel.VulListInfoCveDetail.PublishDate(result);
                            }
                            //var nowDate = new Date(parseInt(date.substr(6)));
                            //var result = "";
                            //result += nowDate.format("dd/mm/yyyy");
                            //viewModel.VulListInfoCveDetail.PublishDate(result);

                            viewModel.VulListInfoCveDetail.Complexity(msg.list.VulnerabilityListInformationCveDetail.Complexity);
                            viewModel.VulListInfoCveDetail.tblname(msg.list.VulnerabilityListInformationCveDetail.tblname);

                            if(msg.list.VulnerabilityListInformationCveDetail.tblname == 'CVEDetail'){
                                viewModel.VulListInfoCveDetail.NVDLoad('yes');
                                viewModel.VulListInfoCveDetail.NVDUrlLink('https://nvd.nist.gov/vuln/detail/' + msg.list.VulnerabilityListInformationCveDetail.CVEId)

                            }
                            else{
                                viewModel.VulListInfoCveDetail.NVDLoad('');
                                viewModel.VulListInfoCveDetail.NVDUrlLink('')
                            }

                            viewModel.VulListInfoCveDetail.UrlLink(msg.list.VulnerabilityListInformationCveDetail.UrlLink);
                            viewModel.VulListInfoCveDetail.Score(msg.list.VulnerabilityListInformationCveDetail.Score);

                            if(msg.list.VulnerabilityListInformationCveDetail.Score == null)
                            {
                                viewModel.VulListInfoCveDetail.Score(0);
                            }
                            viewModel.VulListInfoCveDetail.CVSSV3Score(msg.list.VulnerabilityListInformationCveDetail.CVSSScoreV3);  //cvssscore V3 
                            if(msg.list.VulnerabilityListInformationCveDetail.CVSSScoreV3 == null)
                            {
                                viewModel.VulListInfoCveDetail.CVSSV3Score(0);
                            }

                            viewModel.VulListInfoCveDetail.CVSSV3Vector(msg.list.VulnerabilityListInformationCveDetail.CVSSVectorV3); 
                            if ((msg.list.VulnerabilityListInformationCveDetail.CVSSVectorV3 == null || msg.list.VulnerabilityListInformationCveDetail.CVSSVectorV3 == "")){                               
                                viewModel.VulListInfoCveDetail.CVSSV3Vector("-");
                            }else{
                                viewModel.VulListInfoCveDetail.CVSSV3Vector(msg.list.VulnerabilityListInformationCveDetail.CVSSVectorV3); 
                            }
                            viewModel.VulListInfoCveDetail.CVSSV2Vector(msg.list.VulnerabilityListInformationCveDetail.CVSSVectorV2); 
                            if ((msg.list.VulnerabilityListInformationCveDetail.CVSSVectorV2 == null || msg.list.VulnerabilityListInformationCveDetail.CVSSVectorV2 == "")){                              
                                viewModel.VulListInfoCveDetail.CVSSV2Vector("-");
                            }else{
                                viewModel.VulListInfoCveDetail.CVSSV2Vector(msg.list.VulnerabilityListInformationCveDetail.CVSSVectorV2); 
                            }

                            viewModel.VulListInfoCveDetail.CVSSRatingNm(msg.list.VulnerabilityListInformationCveDetail.CVSSRatingNm);

                            if ((msg.list.VulnerabilityListInformationCveDetail.CVEId == null || msg.list.VulnerabilityListInformationCveDetail.CVEId == "") && (msg.list.VulnerabilityListInformationCveDetail.MyVDBID != null || msg.list.VulnerabilityListInformationCveDetail.MyVDBID != "")  ){
                                viewModel.VulListInfoCveDetail.IDData(msg.list.VulnerabilityListInformationCveDetail.MyVDBID);
                            }
                            else if ((msg.list.VulnerabilityListInformationCveDetail.CVEId != null || msg.list.VulnerabilityListInformationCveDetail.CVEId != "") && (msg.list.VulnerabilityListInformationCveDetail.MyVDBID == null || msg.list.VulnerabilityListInformationCveDetail.MyVDBID == "")  ){
                                viewModel.VulListInfoCveDetail.IDData(msg.list.VulnerabilityListInformationCveDetail.CVEId);
                            }
                            else if ((msg.list.VulnerabilityListInformationCveDetail.CVEId != null || msg.list.VulnerabilityListInformationCveDetail.CVEId != "") && (msg.list.VulnerabilityListInformationCveDetail.MyVDBID != null || msg.list.VulnerabilityListInformationCveDetail.MyVDBID != "")  ){
                                viewModel.VulListInfoCveDetail.IDData(msg.list.VulnerabilityListInformationCveDetail.CVEId + " / " + msg.list.VulnerabilityListInformationCveDetail.MyVDBID);
                            }
                            else{
                                viewModel.VulListInfoCveDetail.IDData("-");
                            }

                            //------------------------------------------------------------------------------------------------------------------------------
                            viewModel.VulListInfo.Id(msg.list.VulnerabilityListInformation.Id);
                            viewModel.VulListInfo.CVEId(msg.list.VulnerabilityListInformation.CVEId);
                            viewModel.VulListInfo.MyVDBID(msg.list.VulnerabilityListInformation.MyVDBID);
                            viewModel.VulListInfo.VulnerabilityType(msg.list.VulnerabilityListInformation.VulnerabilityType);
                            viewModel.VulListInfo.Summary(msg.list.VulnerabilityListInformation.Summary);
                            viewModel.VulListInfo.ImprovementRmk(msg.list.VulnerabilityListInformation.ImprovementRmk);

                            viewModel.VulListInfo.PublishDate(msg.list.VulnerabilityListInformation.PublishDate);
                            var date = msg.list.VulnerabilityListInformation.PublishDate;
                            if (date == null) {
                                viewModel.VulListInfo.PublishDate('-');
                            }else{
                                var nowDate = new Date(parseInt(date.substr(6)));
                                var result = "";
                                result += nowDate.format("dd/mm/yyyy");
                                viewModel.VulListInfo.PublishDate(result);
                            }
                            //var nowDate = new Date(parseInt(date.substr(6)));
                            //var result = "";
                            //result += nowDate.format("dd/mm/yyyy");
                            //viewModel.VulListInfo.PublishDate(result);

                            viewModel.VulListInfo.Complexity(msg.list.VulnerabilityListInformation.Complexity);
                            viewModel.VulListInfo.tblname(msg.list.VulnerabilityListInformation.tblname);
                            viewModel.VulListInfo.UrlLink(msg.list.VulnerabilityListInformation.UrlLink);
                            viewModel.VulListInfo.Score(msg.list.VulnerabilityListInformation.Score);

                            if(msg.list.VulnerabilityListInformation.Score == null)
                            {
                                viewModel.VulListInfo.Score(0);
                            }
                            viewModel.VulListInfo.CVSSV3Score(msg.list.VulnerabilityListInformation.CVSSScoreV3);  //cvssscore V3 
                            if(msg.list.VulnerabilityListInformation.CVSSScoreV3 == null)
                            {
                                viewModel.VulListInfo.CVSSV3Score(0);
                            }

                            viewModel.VulListInfo.CVSSV3Vector(msg.list.VulnerabilityListInformation.CVSSVectorV3); 
                            if ((msg.list.VulnerabilityListInformation.CVSSVectorV3 == null || msg.list.VulnerabilityListInformation.CVSSVectorV3 == "")){                               
                                viewModel.VulListInfo.CVSSV3Vector("-");
                            }else{
                                viewModel.VulListInfo.CVSSV3Vector(msg.list.VulnerabilityListInformation.CVSSVectorV3); 
                            }
                            viewModel.VulListInfo.CVSSV2Vector(msg.list.VulnerabilityListInformation.CVSSVectorV2); 
                            if ((msg.list.VulnerabilityListInformation.CVSSVectorV2 == null || msg.list.VulnerabilityListInformation.CVSSVectorV2 == "")){                              
                                viewModel.VulListInfo.CVSSV2Vector("-");
                            }else{
                                viewModel.VulListInfo.CVSSV2Vector(msg.list.VulnerabilityListInformation.CVSSVectorV2); 
                            }

                            viewModel.VulListInfo.CVSSRatingNm(msg.list.VulnerabilityListInformation.CVSSRatingNm);

                            if ((msg.list.VulnerabilityListInformation.CVEId == null || msg.list.VulnerabilityListInformation.CVEId == "") && (msg.list.VulnerabilityListInformation.MyVDBID != null || msg.list.VulnerabilityListInformation.MyVDBID != "")  ){
                                viewModel.VulListInfo.IDData(msg.list.VulnerabilityListInformation.MyVDBID);
                            }
                            else if ((msg.list.VulnerabilityListInformation.CVEId != null || msg.list.VulnerabilityListInformation.CVEId != "") && (msg.list.VulnerabilityListInformation.MyVDBID == null || msg.list.VulnerabilityListInformation.MyVDBID == "")  ){
                                viewModel.VulListInfo.IDData(msg.list.VulnerabilityListInformation.CVEId);
                            }
                            else if ((msg.list.VulnerabilityListInformation.CVEId != null || msg.list.VulnerabilityListInformation.CVEId != "") && (msg.list.VulnerabilityListInformation.MyVDBID != null || msg.list.VulnerabilityListInformation.MyVDBID != "")  ){
                                viewModel.VulListInfo.IDData(msg.list.VulnerabilityListInformation.CVEId + " / " + msg.list.VulnerabilityListInformation.MyVDBID);
                            }
                            else{
                                viewModel.VulListInfo.IDData("-");
                            }
                            //---------------------------------------------------------------------------------------------------------------------------------------------------

                            //hyperlink untuk vulnerability ID -----------------------------------------------------------------------------------------
                            var countCveIDCve = 0;
                            var data1Cve = viewModel.VulListInfoCveDetail.IDData().split('/');
                            var DatacveIDCve = data1Cve[0];
                            var DataMyVDBIDCve = data1Cve[1];
                            var data2Cve = DatacveIDCve.split(',');
                            tableCveIDCve = "";

                            if(DataMyVDBIDCve != undefined){
                                for (i = 0; i < data2Cve.length; i++) {
                                    var pathCve = data2Cve[i];
                                    viewModel.GetlinkInfo(pathCve);
                                    if(viewModel.linkValidUrl() != ""){
                                        //tableCveIDCve += "<a href='"+ viewModel.linkValidUrl() +"' target='_blank'><font color='blue'>" + pathCve + "</font></a>";
                                        tableCveIDCve += "<a href='#' onclick='Click_CVEID(\""+pathCve+"\")'><font color='blue'>" + pathCve + "</font></a>";
                                    }else{
                                        tableCveIDCve += pathCve ;
                                    }

                                    if (i < data2Cve.length - 1){ // untuk separete by ,
                                        tableCveIDCve += ",";
                                    }else{
                                        tableCveIDCve += "/";
                                        tableCveIDCve += DataMyVDBIDCve;
                                    }
                                }
                            }
                            else{
                                tableCveIDCve = DatacveIDCve;
                            }


                            document.getElementById("LinkVulnerabilityID4").innerHTML = tableCveIDCve;

                            //end hyperlink -------------------------------------------------------------------------------------------------------
                            //hyperlink untuk vulnerability ID -----------------------------------------------------------------------------------------
                            var countCveID = 0;
                            var data1 = viewModel.VulListInfo.IDData().split('/');
                            var DatacveID = data1[0];
                            var DataMyVDBID = data1[1];
                            var data2 = DatacveID.split(',');
                            tableCveID = "";
         
                            if(DataMyVDBID != undefined){
                                for (i = 0; i < data2.length; i++) {
                                    var path = data2[i];
                                    viewModel.GetlinkInfo(path);
                                    if(viewModel.linkValidUrl() != ""){
                                        //tableCveID += "<a href='#' onclick='Click_CVEID(\""+path+"\")'><font color='blue'>" + path + "</font></a>";
                                        tableCveID += "<a href='#' onclick='Click_CVEID(\""+path+"\","+Id+",\""+tblname+"\")'><font color='blue'>" + path + "</font></a>";

                                    }else{
                                        tableCveID += path ;
                                    }

                                    if (i < data2.length - 1){ // untuk separete by ,
                                        tableCveID += ",";
                                    }else{
                                        
                                        //if(tableCveID.trim() == "-"){
                                        //    tableCveID = "<a href='#' onclick='urlLinkClick()'><font color='blue'>" + DataMyVDBID + "</font></a>";
                                        //}else{
                                        //    tableCveID = "<a href='#' onclick='urlLinkClick()'><font color='blue'>" + DataMyVDBID + "</font></a>" + " / " + tableCveID;
                                        //}
                          
                                        if(msg.list.VulnerabilityListInformation.tblname != 'CrawlerInput'){
                                            if(tableCveID.trim() == "-"){
                                                tableCveID = DataMyVDBID;
                                            }else{
                                                tableCveID = "<a href='#' onclick='urlLinkClick()'><font color='blue'>" + DataMyVDBID + "</font></a>" + " / " + tableCveID;
                                            }                               
                                        }
                                        else{
                                            if(tableCveID.trim() == "-"){
                                                tableCveID = DataMyVDBID;
                                            }else{
                                                tableCveID = DataMyVDBID + " / " + tableCveID;
                                            }
                                        }
                                    }
                                }
                            }
                            else{
                                tableCveID = DatacveID;
                            }


                            document.getElementById("LinkVulnerabilityID5").innerHTML = tableCveID;

                            //end hyperlink -------------------------------------------------------------------------------------------------------
                            if (msg.list.VulnerabilityListInformationCveDetail.Summary == null){
                                viewModel.VulListInfoCveDetail.Summary("-");
                            }
                            else{
                                viewModel.VulListInfoCveDetail.ImprovementRmk(msg.list.VulnerabilityListInformationCveDetail.Summary);
                            }

                            if (msg.list.VulnerabilityListInformationCveDetail.ImprovementRmk == null){
                                viewModel.VulListInfoCveDetail.ImprovementRmk("-");
                            }
                            else{
                                viewModel.VulListInfoCveDetail.ImprovementRmk(msg.list.VulnerabilityListInformationCveDetail.ImprovementRmk);
                            }

                            if (msg.list.VulnerabilityListInformationCveDetail.Complexity == 1){
                                viewModel.VulListInfoCveDetail.Complexity("Low");
                            }
                            else if (msg.list.VulnerabilityListInformationCveDetail.Complexity == 2){
                                viewModel.VulListInfoCveDetail.Complexity("Medium");
                            }
                            else if (msg.list.VulnerabilityListInformationCveDetail.Complexity == 3){
                                viewModel.VulListInfoCveDetail.Complexity("High");
                            }
                            else if (msg.list.VulnerabilityListInformationCveDetail.Complexity == 4){
                                viewModel.VulListInfoCveDetail.Complexity("Critical");
                            }
                            else if (msg.list.VulnerabilityListInformationCveDetail.Complexity == 0){
                                viewModel.VulListInfoCveDetail.Complexity("No Impact Level");
                            }
                            else{
                                viewModel.VulListInfoCveDetail.Complexity(msg.list.VulnerabilityListInformationCveDetail.Complexity);
                            }

                            viewModel.VulListInfoCveDetail.Reference(msg.list.VulnerabilityListInformationCveDetail.Reference);
                            viewModel.VulListInfoCveDetail.CWEId(msg.list.VulnerabilityListInformationCveDetail.CWEId);
                            viewModel.VulListInfoCveDetail.CWENm(msg.list.VulnerabilityListInformationCveDetail.x.CWENm);
                            viewModel.VulListInfoCveDetail.CWEDefDesc(msg.list.VulnerabilityListInformationCveDetail.x.Description);
                            viewModel.VulListInfoCveDetail.CWEDefURL(msg.list.VulnerabilityListInformationCveDetail.x.UrlLink);
                            viewModel.VulListInfoCveDetail.VulManInputProductInfoDetail(msg.list.CVEProductListCveDetail);

                            if (msg.list.VulnerabilityListInformation.Summary == null){
                                viewModel.VulListInfo.Summary("-");
                            }
                            else{
                                viewModel.VulListInfo.Summary(msg.list.VulnerabilityListInformation.Summary);
                            }

                            if (msg.list.VulnerabilityListInformation.ImprovementRmk == null){
                                viewModel.VulListInfo.ImprovementRmk("-");
                            }
                            else{
                                viewModel.VulListInfo.ImprovementRmk(msg.list.VulnerabilityListInformation.ImprovementRmk);
                            }

                            if (msg.list.VulnerabilityListInformation.Complexity == 1){
                                viewModel.VulListInfo.Complexity("Low");
                            }
                            else if (msg.list.VulnerabilityListInformation.Complexity == 2){
                                viewModel.VulListInfo.Complexity("Medium");
                            }
                            else if (msg.list.VulnerabilityListInformation.Complexity == 3){
                                viewModel.VulListInfo.Complexity("High");
                            }
                            else if (msg.list.VulnerabilityListInformation.Complexity == 4){
                                viewModel.VulListInfo.Complexity("Critical");
                            }
                            else if (msg.list.VulnerabilityListInformation.Complexity == 0){
                                viewModel.VulListInfo.Complexity("No Impact Level");
                            }
                            else{
                                viewModel.VulListInfo.Complexity(msg.list.VulnerabilityListInformation.Complexity);
                            }

                            viewModel.VulListInfo.Reference(msg.list.VulnerabilityListInformation.Reference);
                            viewModel.VulListInfo.CWEId(msg.list.VulnerabilityListInformation.CWEId);
                            viewModel.VulListInfo.CWENm(msg.list.VulnerabilityListInformation.x.CWENm);
                            viewModel.VulListInfo.CWEDefDesc(msg.list.VulnerabilityListInformation.x.Description);
                            viewModel.VulListInfo.CWEDefURL(msg.list.VulnerabilityListInformation.x.UrlLink);
                            viewModel.CVEProductList(msg.list.CVEProductInformation);


                            //set untuk tukar bground colour markah
                            var bil = $('#bilangan_score3').val();
                            var element = document.getElementById('scoreColour3');
                            if(bil == 0.00){
                                //alert(1);
                                element.className = '';
                                element.classList.add("scoreRating","none");
                            }else if ( bil >= 0.1 && bil <= 3.9){
                                //alert(2);
                                element.className = '';
                                element.classList.add("scoreRating","low");
                            }else if (bil >= 4.0 && bil <= 6.9){
                                //alert(3);
                                element.className = '';
                                element.classList.add("scoreRating","medium");
                            }
                            else if (bil >= 7.0 && bil <= 8.9){
                                //alert(4);
                                element.className = '';
                                element.classList.add("scoreRating","high");
                            }
                            else if (bil >= 9.0){
                                //alert(5);
                                element.className = '';
                                element.classList.add("scoreRating","critical");
                            }

                            var bil = $('#bilangan_score4').val();
                            var element = document.getElementById('scoreColour4');
                            if(bil == 0.00){
                                //alert(1);
                                element.className = '';
                                element.classList.add("scoreRating","none");
                            }else if ( bil >= 0.1 && bil <= 3.9){
                                //alert(2);
                                element.className = '';
                                element.classList.add("scoreRating","low");
                            }else if (bil >= 4.0 && bil <= 6.9){
                                //alert(3);
                                element.className = '';
                                element.classList.add("scoreRating","medium");
                            }
                            else if (bil >= 7.0 && bil <= 8.9){
                                //alert(4);
                                element.className = '';
                                element.classList.add("scoreRating","high");
                            }
                            else if (bil >= 9.0){
                                //alert(5);
                                element.className = '';
                                element.classList.add("scoreRating","critical");
                            }

                            var bilV2 = $('#bilangan_score3V2').val();
                            var element2 = document.getElementById('scoreColour3V2');
                            
                            if(bilV2 == 0.00){
                                //alert(1);
                                element2.className = '';
                                element2.classList.add("scoreRatingV2","none");
                            }else if ( bilV2 >= 0.1 && bilV2 <= 3.9){
                                //alert(2);
                                element2.className = '';
                                element2.classList.add("scoreRatingV2","low");
                            }else if (bilV2 >= 4.0 && bilV2 <= 6.9){
                                //alert(3);
                                element2.className = '';
                                element2.classList.add("scoreRatingV2","medium");
                            }
                            else if (bilV2 >= 7.0 && bilV2 <= 8.9){
                                //alert(4);
                                element2.className = '';
                                element2.classList.add("scoreRatingV2","high");
                            }
                            else if (bilV2 >= 9.0){
                                //alert(5);
                                element2.className = '';
                                element2.classList.add("scoreRatingV2","critical");
                            }

                            var bilV2 = $('#bilangan_score4V2').val();
                            var element2 = document.getElementById('scoreColour4V2');
                            
                            if(bilV2 == 0.00){
                                //alert(1);
                                element2.className = '';
                                element2.classList.add("scoreRatingV2","none");
                            }else if ( bilV2 >= 0.1 && bilV2 <= 3.9){
                                //alert(2);
                                element2.className = '';
                                element2.classList.add("scoreRatingV2","low");
                            }else if (bilV2 >= 4.0 && bilV2 <= 6.9){
                                //alert(3);
                                element2.className = '';
                                element2.classList.add("scoreRatingV2","medium");
                            }
                            else if (bilV2 >= 7.0 && bilV2 <= 8.9){
                                //alert(4);
                                element2.className = '';
                                element2.classList.add("scoreRatingV2","high");
                            }
                            else if (bilV2 >= 9.0){
                                //alert(5);
                                element2.className = '';
                                element2.classList.add("scoreRatingV2","critical");
                            }

                            var text, parser, xmlDoc;

                            //add baca xml data dan list dalam ui
                            var xmldata = viewModel.VulListInfoCveDetail.Reference();

                            parser = new DOMParser();
                            xmlDoc = parser.parseFromString(xmldata,"text/xml");

                            var x,xmlhttp,xmlDoc

                            x = xmlDoc.getElementsByTagName("Reference");
                            //alert(x.length);
                            table="";
                            for (i = 0; i <x.length; i++) {
                                var path = (x[i].getElementsByTagName("Url")[0].childNodes[0].nodeValue);
                                table += "<tr><td style='color:blue;'><a href='"+ path +"' target='_blank' rel='noopener noreferrer'><font color='blue'>" + path + "</font></a>";
                                //table +=  x[i].getElementsByTagName("Url")[0].childNodes[0].nodeValue.link(path);
                                table += "</td></br></tr>";

                            }

                            if(x.length == 0){
                                document.getElementById("demo4").innerHTML = "-";
                            }else{
                                document.getElementById("demo4").innerHTML = table;
                            }

                            //end add


                            var text, parser2, xmlDoc2;
                            //add baca xml data dan list dalam ui
                            var xmldata2 = viewModel.VulListInfo.Reference();

                            parser2 = new DOMParser();
                            xmlDoc2 = parser2.parseFromString(xmldata2,"text/xml");

                            var x2,xmlhttp2,xmlDoc2

                            x2 = xmlDoc2.getElementsByTagName("Reference");
                            //alert(x.length);
                            table2="";
                            for (i = 0; i <x2.length; i++) {
                                var path2 = (x2[i].getElementsByTagName("Url")[0].childNodes[0].nodeValue);
                                table2 += "<tr><td style='color:blue;'><a href='"+ path2 +"' target='_blank' rel='noopener noreferrer'><font color='blue'>" + path2 + "</font></a>";
                                //table +=  x[i].getElementsByTagName("Url")[0].childNodes[0].nodeValue.link(path);
                                table2 += "</td></br></tr>";

                            }

                           // document.getElementById("demo3").innerHTML = table2;
                            if(x2.length == 0){
                                document.getElementById("demo3").innerHTML = "-";
                            }else{
                                document.getElementById("demo3").innerHTML = table2;
                            }
                            //end add




                            $('#VulListInfo3').modal({
                                backdrop: false,
                                show: true
                            });

                            $('#VulListInfo').modal('hide');
                            $('#VulListInfo2').modal('hide');

                            document.getElementById("splitRight2").style.display = "block";


                            //$('#VulListInfo').modal({
                            //    backdrop: false,
                            //    show: true
                            //});

                            //$('.modal-dialog').draggable({
                            //    handle: ".modal-header"
                            //});


                        }
                    }
                });
            },
        }

        ko.applyBindings(viewModel);
    });

    //function click2(year) {
    //    viewModel.searchFunction(year.value);

    //}

    function clickCveMyvdbID(IdSplit) {

        var tmp1 = IdSplit.split(',');
        var Id = tmp1[0];
        var tblname = tmp1[1];

        if(tblname == "MSDetail")
        {
            viewModel.clickMSDetailInfo(Id);
        }
        else{

            viewModel.clickCveMyvdbIDInfo(Id,tblname);
        }

    }


    //function clickCveMyvdbID(Id) {
    //    viewModel.clickCveMyvdbIDInfo(Id);
    //}

    //function clickMSDetail(Id) {
    //    viewModel.clickMSDetailInfo(Id);
    //}

    function clickDetails() {
        $("#MSFullDetails").modal({
            show: 'true',
            backdrop: 'true',
            keyboard: 'true'
        });
    }

    function cancel() {
        document.getElementById("splitRight").style.display = "none";
        document.getElementById("splitRight2").style.display = "none";
        $('#VulListInfo').modal('hide');
        $('#VulListInfo2').modal('hide');
        $('#VulListInfo3').modal('hide');
    }

    function cancelFindingListInfo(){
        document.getElementById("splitRight").style.display = "none";
    }

    function cancelVulListInfo3Right(){
        document.getElementById("splitRight2").style.display = "none";
    }

    function cancelMSListInfo() {
        $('#VulListInfo').modal('hide');
    }

    function cancelMSListDetails() {
        $('#MSFullDetails').modal('hide');
    }

    function cancelMSListModel() {
        $('#MSListInfo').modal('hide');
    }

    function reset(){
        viewModel.search.search_cve_id('');
        viewModel.search.search_type('');
        viewModel.search.search_impact_lvl('');
        viewModel.search.search_title('');
        viewModel.search.search_vendor('');

        var start = new Date().getFullYear() - 20;
        var end = new Date().getFullYear();

        var options = "<option selected value=1>--- Please Choose ---</option>";
        for(var year = start ; year <= end; year++){
            options += "<option>"+ year +"</option>";
        }
        document.getElementById("year").innerHTML = options;

    }

    function FindingListBack() {
        $('#FindingListUpdateInfoModel').modal('hide');
    }

    function urlLinkClick() {
        var name = viewModel.VulListInfo.tblname();
        var id = viewModel.VulListInfo.Id();
        viewModel.clickUrlLink(id,name);
    }

    var start = new Date().getFullYear() - 20;
    var end = new Date().getFullYear();

    //var yearss = new Date().getFullYear();
    var yearss = '1'; //year empty

    var options = "<option value=1 selected>--- Please Choose ---</option>";

    for(var year = start ; year <= end; year++){
        //if (year == yearss){
        //    options += "<option selected>"+ year +"</option>";
        //}
        //else{
            options += "<option>"+ year +"</option>";
        //}
    }

    document.getElementById("year").innerHTML = options;

    function paginateCLICK(page, ind) {

        var pageind = 0;
        if(ind == 0)
        {
            pageind = (parseInt($("#pagenum").val()) + 10);
        }
        else if(ind == 2)
        {
            pageind = (parseInt($("#pagenum").val()) - 10);
        }
        else
        {
            pageind = page;
        }

        var year = parseInt($("#year").val());
        var search_cve_id = document.getElementById('search_cve_id').value;
        var search_type = document.getElementById('search_type').value;
        var search_impact_lvl = document.getElementById('search_impact_lvl').value;
        var search_title = document.getElementById('search_title').value;
        var search_vendor = document.getElementById('search_vendor').value;

        viewModel.pageind(pageind);

        viewModel.searchFunctionBasedonPaginate(year,pageind,search_cve_id, search_type, search_impact_lvl, search_title, search_vendor);

        //-----------------------------------------------------------------------------------------------------------------
        paginatation(pageind);
        //-----------------------------------------------------------------------------------------------------------------


    }


    function getVulList() {
        //paginateCLICK2(0,1);

        //var pageind = 0;
        //var year = new Date().getFullYear();
        //var search_cve_id = '';
        //var search_type = '';
        //var search_impact_lvl = '';
        //var search_title = '';

        //viewModel.searchFunctionBasedonPaginate(year,pageind,search_cve_id,search_type, search_impact_lvl, search_title);

        //var markup_2 = "<ul id='paginationUl' class='pagination'>";

        //var i = 0;

        //markup_2 = markup_2 + "<li><a href='#' style='background-color: #337ab7;color: #fff;' onclick='paginateCLICK(" + viewModel.pageind() + ", 1)'>" + (viewModel.pageind() / 10 + 1) + "</a></li>";

        //for (i = 1 ; i <= 2; i++)
        //{

        //    if((viewModel.pageind() / 10 + 1 + i) <= (viewModel.rating1.GetTotalVulnerabilityList.countAllRow() / 10)){
        //        markup_2 = markup_2 + "<li><a href='#' onclick='paginateCLICK(" + (viewModel.pageind() + (i * 10)) + ", 1)'>" + (viewModel.pageind() / 10 + 1 + i) + "</a></li>";
        //    }
        //}

        //var deldecimal = (viewModel.rating1.GetTotalVulnerabilityList.countAllRow() / 10);
        ////var deldecimal = (viewModel.countAllRow() / 10);
        //var lastPages = '';

        //if((deldecimal % 1) == 0){
        //    lastPages =  (Math.floor(deldecimal) * 10 - 10);
        //}
        //else{
        //    lastPages =  (Math.floor(deldecimal) * 10);
        //}


        //if((viewModel.pageind() / 10 + 1 + 3) <  Math.round(deldecimal))
        //{
        //    markup_2 = markup_2 + "<li><a href='#'>...</a></li>";
        //    markup_2 = markup_2 + "<li><a href='#' onclick='paginateCLICK(" + lastPages + ", 1)'>" + Math.round(deldecimal) + "</a></li>";
        //}else
        //{
        //    if(Math.round(deldecimal) != (viewModel.pageind() / 10 + 1)){
        //        markup_2 = markup_2 + "<li><a href='#' onclick='paginateCLICK(" + lastPages  + ", 1)'>" + Math.round(deldecimal) + "</a></li>";
        //    }
        //}



        //markup_2 = markup_2 + "<li id='Next'><a href='#' onclick='paginateCLICK(" + pageind + ", 0)'>Next</a></li>";
        //markup_2 = markup_2 + "</ul>";

        //$("#drawPaginate1").html(markup_2);


        //if(viewModel.rating1.GetTotalVulnerabilityList.countAllRow() == 0 )
        //{
        //    document.getElementById("nodata").style.display = "";
        //}
        //else
        //{
        //    document.getElementById("nodata").style.display = "none";
        //}

    }

    function paginateCLICK2(page, ind){
        var pageind = 0;
        if(ind == 0)
        {
            pageind = (parseInt($("#pagenum").val()) + 10);
        }
        else
        {
            pageind = page;
        }

        var year = parseInt($("#year").val());
        var search_cve_id = document.getElementById('search_cve_id').value;
        var search_type = document.getElementById('search_type').value;
        var search_impact_lvl = document.getElementById('search_impact_lvl').value;
        var search_title = document.getElementById('search_title').value;
        var search_vendor = document.getElementById('search_vendor').value;

        //if (search_vendor != "") {

        //    if (year == "1"){
        //        ShowMessageWarning("Please select register year");
        //    }
        //    else{
        //        viewModel.pageind(pageind);
        //        viewModel.searchFunctionBasedonPaginate2(year,pageind,search_cve_id,search_type, search_impact_lvl, search_title, search_vendor);
        //    }
        //}
        //else {
        //    viewModel.pageind(pageind);
        //    viewModel.searchFunctionBasedonPaginate2(year,pageind,search_cve_id,search_type, search_impact_lvl, search_title, search_vendor);
        //}

        viewModel.pageind(pageind);
        viewModel.searchFunctionBasedonPaginate2(year,pageind,search_cve_id,search_type, search_impact_lvl, search_title, search_vendor);
        


    }

    function Click_CVEID(path,Id,tblname){
        viewModel.clickUrlLinkUsePath(path,Id,tblname);
    }

    $(document).ready(function(){
        $('#proceed').click();
    });


    function CheckInput(Input) {

        //if (Input != ""){
        //    $("#YearReg").addClass("required");
        //}
        //else{
        //    $("#YearReg").removeClass("required");
        //}
      
    }

    //var $loading = $('#loadingDiv').hide();
    //$(document)
    //  .ajaxStart(function () {
    //      $loading.show();
    //  })
    //  .ajaxStop(function () {
    //      $loading.hide();
    //  });

</script>


